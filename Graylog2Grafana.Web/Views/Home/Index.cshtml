@using Graylog2Grafana.Web.Models.Helpers;
@using Time.Series.Anomaly.Detection.Data.Models.Enums;
@using Time.Series.Anomaly.Detection.Data.Models;
@model List<MonitorSeries>
@{
    ViewData["Title"] = "Home Page";

    List<SelectListItem> annotationTypes = EnumProvider<MonitorType>.GetValues(MonitorType.Downwards).Select(x => new SelectListItem { Text = x.Value, Value = x.Key.ToString() }).ToList();
}
<div class="mb-3">
    <a type="button" class="btn btn-primary btn-sm" href="@Url.Action("Create", "MonitorSeries")" title="New series monitor"><i class="bi bi-plus-square"></i></a>
</div>

@foreach (var type in annotationTypes)
{
    if (Model.Any(x => ((int)x.MonitorType).ToString() == type.Value))
    {
        <div>
            <h4>
                Monitor type
                <small class="text-muted">@type.Text</small>
            </h4>
        </div>
        <table class="table table-hover mt-3">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col" title="The amount of latest minutes to be used in anomaly detection">Steps</th>
                    <th scope="col">Sensitivity</th>
                    <th scope="col" title="The value that below it, you will not be notified if any anomaly is detected">Lower limit</th>
                    <th scope="col" title="The value that above it, you will not be notified if any anomaly is detected">Upper limit</th>
                    <th scope="col" title="Do not produce alert within given minutes from the last alert in this series">No alert for</th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Where(x => ((int)x.MonitorType).ToString() == type.Value))
                {
                    <tr>
                        <th scope="row" style="cursor:pointer" title="@item.Query">@item.Name</th>
                        <td>@item.Description</td>
                        <td>@item.MinuteDurationForAnomalyDetection</td>
                        <td>@item.Sensitivity</td>
                        <td>@item.LowerLimitToDetect</td>
                        <td>@item.UpperLimitToDetect</td>
                        <td>@item.DoNotAlertAgainWithinMinutes</td>
                        <td>
                            <a type="button" title="Preview" class="btn btn-secondary btn-sm" href="@Url.Action("Preview", "MonitorSeries", new { id = item.ID })"><i class="bi bi-search"></i></a>
                        </td>
                        <td>
                            <a type="button" title="Edit" class="btn btn-primary btn-sm" href="@Url.Action("Edit", "MonitorSeries", new { id = item.ID })"><i class="bi bi-pencil-square"></i></a>
                        </td>
                        <td>
                            <a type="button" title="Delete" class="btn btn-danger btn-sm" href="@Url.Action("Delete", "MonitorSeries", new { id = item.ID })"><i class="bi bi-trash"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}



